// GENERATED BY S3LM4
package com.sefryek.brokerpro.service.mapper;


@org.springframework.stereotype.Service("")
public final class ConditionalAlertConditionsMapperSelmaGeneratedClass
    implements ConditionalAlertConditionsMapper {

  @Override
  public final java.util.List<com.sefryek.brokerpro.dto.response.mobile.alert.ConditionalAlertConditions> as(java.util.List<com.sefryek.brokerpro.tadbir.dto.response.mobile.alert.ConditionsTadbir> in) {
    java.util.List<com.sefryek.brokerpro.dto.response.mobile.alert.ConditionalAlertConditions> out = null;
    if (in != null) {
      java.util.ArrayList<com.sefryek.brokerpro.dto.response.mobile.alert.ConditionalAlertConditions> aoutTmpCollection = new java.util.ArrayList<com.sefryek.brokerpro.dto.response.mobile.alert.ConditionalAlertConditions>(in.size());
      for (com.sefryek.brokerpro.tadbir.dto.response.mobile.alert.ConditionsTadbir aoutItem : in) {
        aoutTmpCollection.add(asConditionalAlertConditions(aoutItem));
      }
      out = aoutTmpCollection;
    }
    return out;
  }

  public final com.sefryek.brokerpro.dto.response.mobile.alert.ConditionalAlertConditions asConditionalAlertConditions(com.sefryek.brokerpro.tadbir.dto.response.mobile.alert.ConditionsTadbir in) {
    com.sefryek.brokerpro.dto.response.mobile.alert.ConditionalAlertConditions out = null;
    if (in != null) {
      out = new com.sefryek.brokerpro.dto.response.mobile.alert.ConditionalAlertConditions();
      out.setConditionDescription(in.getConditionDescription());
      out.setEqualityType(asEqualityType(in.getEqualityType()));
      out.setNscCode(in.getNscCode());
      out.setValueInSearch(in.getValueInSearch());
    }
    return out;
  }

  public final com.sefryek.brokerpro.dto.response.mobile.alert.enumeration.EqualityType asEqualityType(com.sefryek.brokerpro.tadbir.dto.response.mobile.alert.enumeration.EqualityTypeTadbir in) {
    com.sefryek.brokerpro.dto.response.mobile.alert.enumeration.EqualityType out = null;
    if (in != null) {
      switch (in) {
        case NONE :  {
          out = com.sefryek.brokerpro.dto.response.mobile.alert.enumeration.EqualityType.NONE;
          break;
        }
        case EQUALITY :  {
          out = com.sefryek.brokerpro.dto.response.mobile.alert.enumeration.EqualityType.EQUALITY;
          break;
        }
        case NOT_EQUAL :  {
          out = com.sefryek.brokerpro.dto.response.mobile.alert.enumeration.EqualityType.NOT_EQUAL;
          break;
        }
        case GREATER :  {
          out = com.sefryek.brokerpro.dto.response.mobile.alert.enumeration.EqualityType.GREATER;
          break;
        }
        case GREATER_OR_EQUAL :  {
          out = com.sefryek.brokerpro.dto.response.mobile.alert.enumeration.EqualityType.GREATER_OR_EQUAL;
          break;
        }
        case LESS :  {
          out = com.sefryek.brokerpro.dto.response.mobile.alert.enumeration.EqualityType.LESS;
          break;
        }
        case LESS_OR_EQUAL :  {
          out = com.sefryek.brokerpro.dto.response.mobile.alert.enumeration.EqualityType.LESS_OR_EQUAL;
          break;
        }
      }
    }
    return out;
  }



  /**
   * Single constructor
   */
  public ConditionalAlertConditionsMapperSelmaGeneratedClass() {
  }

}
